<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vcampus.server.core.library.mapper.BookMapper">
    
    <!-- 结果映射 -->
    <resultMap id="BookResultMap" type="com.vcampus.server.core.library.entity.Book">
        <id column="book_Id" property="bookId"/>
        <result column="isbn" property="isbn"/>
        <result column="Title" property="title"/>
        <result column="Author" property="author"/>
        <result column="Publisher" property="publisher"/>
        <result column="Publish_date" property="publishDate"/>
        <result column="Category" property="category"/>
        <result column="Location" property="location"/>
        <result column="Total_qty" property="totalQty"/>
        <result column="Avail_qty" property="availQty"/>
        <result column="Status" property="status" typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
    </resultMap>
    
    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        book_Id, isbn, Title, Author, Publisher, Publish_date, Category, Location, Total_qty, Avail_qty, Status
    </sql>
    
    <!-- 根据ID查询 -->
    <select id="findById" parameterType="int" resultMap="BookResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM tblBook
        WHERE book_Id = #{bookId}
    </select>
    
    <!-- 查询所有图书 -->
    <select id="findAll" resultMap="BookResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM tblBook
        ORDER BY Title
    </select>
    
    <!-- 根据ISBN查询 -->
    <select id="findByIsbn" parameterType="string" resultMap="BookResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM tblBook
        WHERE isbn = #{isbn}
    </select>
    
    <!-- 根据书名模糊查询 -->
    <select id="findByTitleLike" parameterType="string" resultMap="BookResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM tblBook
        WHERE Title LIKE CONCAT('%', #{title}, '%')
        ORDER BY Title
    </select>
    
    <!-- 根据作者模糊查询 -->
    <select id="findByAuthorLike" parameterType="string" resultMap="BookResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM tblBook
        WHERE Author LIKE CONCAT('%', #{author}, '%')
        ORDER BY Author
    </select>
    
    <!-- 根据出版社模糊查询 -->
    <select id="findByPublisherLike" parameterType="string" resultMap="BookResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM tblBook
        WHERE Publisher LIKE CONCAT('%', #{publisher}, '%')
        ORDER BY Publisher
    </select>
    
    <!-- 根据分类查询 -->
    <select id="findByCategory" parameterType="string" resultMap="BookResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM tblBook
        WHERE Category = #{category}
        ORDER BY Title
    </select>
    
    <!-- 根据位置查询 -->
    <select id="findByLocation" parameterType="string" resultMap="BookResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM tblBook
        WHERE Location LIKE CONCAT('%', #{location}, '%')
        ORDER BY Title
    </select>
    
    <!-- 查询可借阅的图书 -->
    <select id="findAvailableBooks" resultMap="BookResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM tblBook
        WHERE Avail_qty > 0 AND Status = 'IN_LIBRARY'
        ORDER BY Title
    </select>
    
    <!-- 查询已借完的图书 -->
    <select id="findOutOfStockBooks" resultMap="BookResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM tblBook
        WHERE Avail_qty = 0
        ORDER BY Title
    </select>
    
    <!-- 综合搜索图书 -->
    <select id="searchBooks" resultMap="BookResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM tblBook
        <where>
            <if test="keyword != null and keyword != ''">
                AND (Title LIKE CONCAT('%', #{keyword}, '%') 
                     OR Author LIKE CONCAT('%', #{keyword}, '%')
                     OR Publisher LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="category != null and category != ''">
                AND Category = #{category}
            </if>
            <if test="author != null and author != ''">
                AND Author LIKE CONCAT('%', #{author}, '%')
            </if>
            <if test="publisher != null and publisher != ''">
                AND Publisher LIKE CONCAT('%', #{publisher}, '%')
            </if>
            <if test="location != null and location != ''">
                AND Location LIKE CONCAT('%', #{location}, '%')
            </if>
            <if test="availableOnly">
                AND Avail_qty > 0 AND Status = 'IN_LIBRARY'
            </if>
        </where>
        ORDER BY Title
    </select>
    
    <!-- 插入图书 -->
    <insert id="insert" parameterType="com.vcampus.server.core.library.entity.Book" useGeneratedKeys="true" keyProperty="bookId">
        INSERT INTO tblBook (isbn, Title, Author, Publisher, Publish_date, Category, Location, Total_qty, Avail_qty, Status)
        VALUES (#{isbn}, #{title}, #{author}, #{publisher}, #{publishDate}, #{category}, #{location}, #{totalQty}, #{availQty}, #{status})
    </insert>
    
    <!-- 更新图书 -->
    <update id="update" parameterType="com.vcampus.server.core.library.entity.Book">
        UPDATE tblBook
        SET isbn = #{isbn},
            Title = #{title},
            Author = #{author},
            Publisher = #{publisher},
            Publish_date = #{publishDate},
            Category = #{category},
            Location = #{location},
            Total_qty = #{totalQty},
            Avail_qty = #{availQty},
            Status = #{status}
        WHERE book_Id = #{bookId}
    </update>
    
    <!-- 根据ID删除 -->
    <delete id="deleteById" parameterType="int">
        DELETE FROM tblBook WHERE book_Id = #{bookId}
    </delete>
    
    <!-- 检查是否存在 -->
    <select id="existsById" parameterType="int" resultType="boolean">
        SELECT COUNT(1) > 0 FROM tblBook WHERE book_Id = #{bookId}
    </select>
    
    <!-- 统计数量 -->
    <select id="count" resultType="long">
        SELECT COUNT(1) FROM tblBook
    </select>
    
    <!-- 更新库存 -->
    <update id="updateStock">
        UPDATE tblBook SET Avail_qty = #{availQty} WHERE book_Id = #{bookId}
    </update>
    
    <!-- 更新状态 -->
    <update id="updateStatus">
        UPDATE tblBook SET Status = #{status} WHERE book_Id = #{bookId}
    </update>
    
</mapper>
